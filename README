Raumautomatisierungsoftware:
----------------------------
Plugin orientierte Steuersoftware für Raumautomatisierung. Plugins für
Steckdosen, Rollo, Led Beleuchtung, PulseAudio, Videoabspielprogramm,
Beamersteuerung und Zeitbasierte Ereignisse sind vorhanden und in Benutzung.

Plattform:
----------
- Windows ab Vista (Qt4;OpenSSL;Windows API: CryptProtectData, CryptUnprotectData, LogonUser)
  Einige Plugins sind linux-only: remotecontrol
- Linux ab 2.6.22 (Qt4;OpenSSL;pam;dbus;gstreamer;pulseaudio)

Architektur:
------------
Es gibt den ausführenden Kern des Systems, im weiteren Server genannt.
Es gibt Clients, welche sich mit dem Server über eine SSL gesicherte
Verbindung und linux-pam Authentifierzung verbinden können.
Es gibt Plugins, welche den Server um Funktionalität ergänzen und Clients
GUI Erweiterungen zur Ansteuerung der Plugin Funktionen zur Verfügung stellen.

Auf der Serverseite wird die Funktionalität eines Plugins durch seine Controllerklasse gegeben.
Diese kommuniziert mit dem Server und gegebenenfalls mit anderen Plugins über Aktionen und
StateTracker.
Auf der Clientseite kann ein Plugin Modelle (Qt MVC Prinzip) bereitstellen, die von Clients
zu Anzeige- und Manipulationszwecken genutzt werden können. Die Modelle der Clients werden
synchronisieren selbstständig mit dem Server.

Plugins bieten desweiteren Ereignisse, Bedingungen und Aktionen an, welche in Profilen
zusammengefasst werden können. Profile können Kategorien zugeordnet werden.
Ereignisse können Profile aktivieren (z.B. das Drücken einer Fernbedienungstaste,
das Eintreten eines bestimmten Zeitpunktes).
Wenn alle Bedingungen, welche einem Profil zugeordnet sind, zutreffen
(z.B. das Rollo ist offen) werden die im Profil definierten Aktionen,
ggfs. mit einer eingestellten zeitlichen Verzögerung, ausgeführt.

StateTracker geben Veränderungen des Controllers an den Server weiter, welcher
verbundene Clients synchronisiert. Clients werden beim Verbinden mit allen Objekten
(Events, Conditions, Actions, StateTracker) synchronisiert und über das StateTracker
System ist die ständige Konsistenz mit dem Server sichergestellt.

Anwendungsgebiete:
------------------
1. Intelligenter Wecker
2. Energiesparsystem
3. Intelligenter Raum
4. Automatisiertes Heimkino

Externe Software:
--------
- PulseAudio für die Soundsteuerung unter Linux.
- Fernbedienungseingaben werden über eine Eigenentwicklung [liri daemon (für X10 433Mhz Funkfernbedienungen)]
entgegengenommen. Sobald ein einheitliches Framework für Fernbedienungen über das linux input subsystem
möglich ist, sollte dieses verwendet werden.

Clients:
--------
Die Desktopclients nutzten das QWidget-basierte Framework.

Benötigte Packete unter Linux/Ubuntu:
-------------------------------------
libpam0g-dev
libqt4-dev

TODO:
-----
ROOMCONTROL SERVER ALS WEBSERVER:
Um neuartige Mobiltelefone (Smartphones) mit Touchbedienung unterstützen zu können,
sowie Bedienung über den Browser bei Desktop PCs oder PC Touchscreens zu ermöglichen soll ein Client in Html5/CSS3/JS Technologie
folgen und alle bisherigen Qt Clients ablösen. Es wird vorrangig Webkit als Rendering Engine angepeilt. (Toolkits: Sencha Touch)

Server:
* Eine erweiterte Session Behandlung (multiple logins/endpoints, session cookie id, etc) muss in den Server eingebaut werden.
* Eine Webserverfunktionalität (SSL!) muss ergänzt werden.
* Client Abstrahierung: HTTP oder reines JSon Protokoll
* Bekannte Sicherungsmaßnahmen (Denial of service, Flooding) müssen ergriffen werden.
* Plugins sollen in eigenen Prozessen laufen. Möglicherweise Named-pipes oder loopback Netzwerk für Kommunikation nutzen.

Client:
* Statische Html Seiten, CSS, JS
* Ajax/JSon/Sencha für Inhaltsaufbereitung nutzen