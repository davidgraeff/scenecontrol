cmake_minimum_required(VERSION 2.8)

#Only allow this file to be included by the root cmake file
IF (NOT DEFINED PRODUCTID)
	RETURN()
ENDIF()

LIST(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake/")
find_package(Qt4 4.7.0 COMPONENTS QtCore REQUIRED)
find_package(PAM QUIET)
find_package(QJSON QUIET)

project(roomcontrolserver)
message(STATUS "Configure server")

IF (PAM_FOUND OR WIN32)
	IF (QJSON_FOUND)
		OPTION(BUILD_SERVER "Build server" ON)
	ENDIF()
ENDIF()

IF (BUILD_SERVER)
	IF (PAM_FOUND)
		include_directories()
	ENDIF()
	
	include_directories(${QT_INCLUDES} ${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_SOURCE_DIR}/.. ${CMAKE_BINARY_DIR} ${QJSON_INCLUDE_DIR} )

	ADD_DEFINITIONS(-DPLUGIN_ID="${targetname}" -D_GNU_SOURCE -Wall -W -DQT_NO_CAST_FROM_ASCII -DQT_NO_CAST_TO_ASCII -DQT_USE_FAST_OPERATOR_PLUS -DQT_USE_FAST_CONCATENATION ${QT_DEFINITIONS} ${QDBUS_DEFINITIONS})

	file(GLOB_RECURSE SRCS_H *.h)
	file(GLOB_RECURSE SRCS *.cpp)

	QT_WRAP_CPP(${PROJECT_NAME} SRCS_MOCS ${SRCS_H})
	#QT4_ADD_RESOURCES(RoomControlServer_RC ../res.qrc)

	add_executable(${PROJECT_NAME} ${SRCS} ${SRCS_MOCS} ${Shared_SRCS})

	target_link_libraries(${PROJECT_NAME}
	${QT_QTCORE_LIBRARY} ${QT_QTNETWORK_LIBRARIES}
	${QT_QTTEST_LIBRARIES} ${QT_QTDBUS_LIBRARIES} ${PAM_LIBRARIES} ${QJSON_LIBRARIES})

	INSTALL(TARGETS ${PROJECT_NAME} DESTINATION bin COMPONENT Server)
	GET_TARGET_PROPERTY(BINARY_NAME ${PROJECT_NAME} OUTPUT_NAME)
	SET(CPACK_PACKAGE_EXECUTABLES ${CPACK_PACKAGE_EXECUTABLES} ${PROJECT_NAME} ${PROJECT_NAME} CACHE INTERNAL "")
	
	FILE(GLOB files "certificates/*")
	install( FILES ${files} DESTINATION ${CERTPATH} COMPONENT Server)

	FILE(GLOB files "www/*")
	install( FILES ${files} DESTINATION ${WWWPATH} COMPONENT Server)
ELSE(BUILD_SERVER)
	MESSAGE("Not building: Server")
ENDIF(BUILD_SERVER)
