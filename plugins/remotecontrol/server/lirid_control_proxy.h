/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -p lirid_control_proxy org.lirid.control.xml
 *
 * qdbusxml2cpp is Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef LIRID_CONTROL_PROXY_H
#define LIRID_CONTROL_PROXY_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface org.liri.Control
 */
class OrgLiriControlInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.liri.Control"; }

public:
    OrgLiriControlInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~OrgLiriControlInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<QString> lastHalCallout()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("lastHalCallout"), argumentList);
    }

    inline QDBusPendingReply<> quit()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("quit"), argumentList);
    }

    inline QDBusPendingReply<> start()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("start"), argumentList);
    }

    inline QDBusPendingReply<QString> started()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("started"), argumentList);
    }

    inline QDBusPendingReply<QString> version()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("version"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void deviceAdded(const QString & rid);
    void deviceRemoved(const QString & rid);
};

namespace org {
  namespace liri {
    typedef ::OrgLiriControlInterface Control;
  }
}
#endif
